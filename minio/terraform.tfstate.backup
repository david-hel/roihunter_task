{
  "version": 4,
  "terraform_version": "1.2.8",
  "serial": 3,
  "lineage": "33a5cc82-c282-d4ec-5c33-8edbbe21d5ce",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "minio",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "minio",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "minio",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "RELEASE.2022-09-17T00-09-45Z",
                "chart": "minio",
                "name": "minio",
                "namespace": "minio",
                "revision": 1,
                "values": "{\"DeploymentUpdate\":{\"maxSurge\":\"100%\",\"maxUnavailable\":0,\"type\":\"RollingUpdate\"},\"StatefulSetUpdate\":{\"updateStrategy\":\"RollingUpdate\"},\"additionalAnnotations\":{},\"additionalLabels\":{},\"affinity\":{},\"bucketRoot\":\"\",\"buckets\":null,\"certsPath\":\"/etc/minio/certs/\",\"clusterDomain\":\"cluster.local\",\"configPathmc\":\"/etc/minio/mc/\",\"consoleIngress\":{\"annotations\":{},\"enabled\":false,\"hosts\":[\"console.minio-example.local\"],\"labels\":{},\"path\":\"/\",\"tls\":[]},\"consoleService\":{\"clusterIP\":null,\"nodePort\":32001,\"port\":\"9001\",\"type\":\"ClusterIP\"},\"customCommandJob\":{\"affinity\":{},\"annotations\":{},\"exitCommand\":\"\",\"nodeSelector\":{},\"podAnnotations\":{},\"resources\":{\"requests\":{\"memory\":\"128Mi\"}},\"securityContext\":{\"enabled\":false,\"fsGroup\":1000,\"runAsGroup\":1000,\"runAsUser\":1000},\"tolerations\":[]},\"customCommands\":null,\"drivesPerNode\":1,\"environment\":null,\"etcd\":{\"clientCert\":\"\",\"clientCertKey\":\"\",\"corednsPathPrefix\":\"\",\"endpoints\":[],\"pathPrefix\":\"\"},\"existingSecret\":\"\",\"extraArgs\":[],\"extraVolumeMounts\":[],\"extraVolumes\":[],\"fullnameOverride\":\"\",\"gateway\":{\"replicas\":4,\"type\":\"nas\"},\"ignoreChartChecksums\":false,\"image\":{\"pullPolicy\":\"IfNotPresent\",\"repository\":\"quay.io/minio/minio\",\"tag\":\"RELEASE.2022-09-17T00-09-45Z\"},\"imagePullSecrets\":[],\"ingress\":{\"annotations\":{},\"enabled\":false,\"hosts\":[\"minio-example.local\"],\"labels\":{},\"path\":\"/\",\"tls\":[]},\"makeBucketJob\":{\"affinity\":{},\"annotations\":{},\"exitCommand\":\"\",\"extraVolumeMounts\":[],\"extraVolumes\":[],\"nodeSelector\":{},\"podAnnotations\":{},\"resources\":{\"requests\":{\"memory\":\"128Mi\"}},\"securityContext\":{\"enabled\":false,\"fsGroup\":1000,\"runAsGroup\":1000,\"runAsUser\":1000},\"tolerations\":[]},\"makePolicyJob\":{\"affinity\":{},\"annotations\":{},\"exitCommand\":\"\",\"extraVolumeMounts\":[],\"extraVolumes\":[],\"nodeSelector\":{},\"podAnnotations\":{},\"resources\":{\"requests\":{\"memory\":\"128Mi\"}},\"securityContext\":{\"enabled\":false,\"fsGroup\":1000,\"runAsGroup\":1000,\"runAsUser\":1000},\"tolerations\":[]},\"makeUserJob\":{\"affinity\":{},\"annotations\":{},\"exitCommand\":\"\",\"extraVolumeMounts\":[],\"extraVolumes\":[],\"nodeSelector\":{},\"podAnnotations\":{},\"resources\":{\"requests\":{\"memory\":\"128Mi\"}},\"securityContext\":{\"enabled\":false,\"fsGroup\":1000,\"runAsGroup\":1000,\"runAsUser\":1000},\"tolerations\":[]},\"mcImage\":{\"pullPolicy\":\"IfNotPresent\",\"repository\":\"quay.io/minio/mc\",\"tag\":\"RELEASE.2022-09-16T09-16-47Z\"},\"metrics\":{\"serviceMonitor\":{\"additionalLabels\":{},\"enabled\":false,\"includeNode\":false,\"public\":true,\"relabelConfigs\":{},\"relabelConfigsCluster\":{}}},\"minioAPIPort\":\"9000\",\"minioConsolePort\":\"9001\",\"mode\":\"distributed\",\"mountPath\":\"/export\",\"nameOverride\":\"\",\"networkPolicy\":{\"allowExternal\":true,\"enabled\":false},\"nodeSelector\":{},\"oidc\":{\"claimName\":\"policy\",\"claimPrefix\":\"\",\"clientId\":\"minio\",\"clientSecret\":\"\",\"comment\":\"\",\"configUrl\":\"https://identity-provider-url/.well-known/openid-configuration\",\"enabled\":false,\"redirectUri\":\"https://console-endpoint-url/oauth_callback\",\"scopes\":\"openid,profile,email\"},\"persistence\":{\"VolumeName\":\"\",\"accessMode\":\"ReadWriteOnce\",\"annotations\":{},\"enabled\":true,\"existingClaim\":\"\",\"size\":\"500Gi\",\"storageClass\":\"\",\"subPath\":\"\"},\"podAnnotations\":{},\"podDisruptionBudget\":{\"enabled\":false,\"maxUnavailable\":1},\"podLabels\":{},\"policies\":[],\"pools\":1,\"priorityClassName\":\"\",\"replicas\":16,\"resources\":{\"requests\":{\"memory\":\"16Gi\"}},\"rootPassword\":\"\",\"rootUser\":\"\",\"runtimeClassName\":\"\",\"securityContext\":{\"enabled\":true,\"fsGroup\":1000,\"fsGroupChangePolicy\":\"OnRootMismatch\",\"runAsGroup\":1000,\"runAsUser\":1000},\"service\":{\"clusterIP\":null,\"nodePort\":32000,\"port\":\"9000\",\"type\":\"ClusterIP\"},\"serviceAccount\":{\"create\":true,\"name\":\"minio-sa\"},\"tls\":{\"certSecret\":\"\",\"enabled\":false,\"privateKey\":\"private.key\",\"publicCrt\":\"public.crt\"},\"tolerations\":[],\"topologySpreadConstraints\":[],\"trustedCertsSecret\":\"\",\"users\":[{\"accessKey\":\"console\",\"policy\":\"consoleAdmin\",\"secretKey\":\"console123\"}]}",
                "version": "4.0.15"
              }
            ],
            "name": "minio",
            "namespace": "minio",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://charts.min.io/",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "## Provide a name in place of minio for `app:` labels\n##\nnameOverride: \"\"\n\n## Provide a name to substitute for the full names of resources\n##\nfullnameOverride: \"\"\n\n## set kubernetes cluster domain where minio is running\n##\nclusterDomain: cluster.local\n\n## Set default image, imageTag, and imagePullPolicy. mode is used to indicate the\n##\nimage:\n  repository: quay.io/minio/minio\n  tag: RELEASE.2022-09-17T00-09-45Z\n  pullPolicy: IfNotPresent\n\nimagePullSecrets: []\n# - name: \"image-pull-secret\"\n\n## Set default image, imageTag, and imagePullPolicy for the `mc` (the minio\n## client used to create a default bucket).\n##\nmcImage:\n  repository: quay.io/minio/mc\n  tag: RELEASE.2022-09-16T09-16-47Z\n  pullPolicy: IfNotPresent\n\n## minio mode, i.e. standalone or distributed or gateway.\nmode: distributed ## other supported values are \"standalone\", \"gateway\"\n\n## Additional labels to include with deployment or statefulset\nadditionalLabels: {}\n\n## Additional annotations to include with deployment or statefulset\nadditionalAnnotations: {}\n\n## Typically the deployment/statefulset includes checksums of secrets/config,\n## So that when these change on a subsequent helm install, the deployment/statefulset\n## is restarted. This can result in unnecessary restarts under GitOps tooling such as\n## flux, so set to \"true\" to disable this behaviour.\nignoreChartChecksums: false\n\n## Additional arguments to pass to minio binary\nextraArgs: []\n\n## Additional volumes to minio container\nextraVolumes: []\n\n## Additional volumeMounts to minio container\nextraVolumeMounts: []\n\n## Internal port number for MinIO S3 API container\n## Change service.port to change external port number\nminioAPIPort: \"9000\"\n\n## Internal port number for MinIO Browser Console container\n## Change consoleService.port to change external port number\nminioConsolePort: \"9001\"\n\n## Update strategy for Deployments\nDeploymentUpdate:\n  type: RollingUpdate\n  maxUnavailable: 0\n  maxSurge: 100%\n\n## Update strategy for StatefulSets\nStatefulSetUpdate:\n  updateStrategy: RollingUpdate\n\n## Pod priority settings\n## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/\n##\npriorityClassName: \"\"\n\n## Pod runtime class name\n## ref https://kubernetes.io/docs/concepts/containers/runtime-class/\n##\nruntimeClassName: \"\"\n\n## Set default rootUser, rootPassword\n## AccessKey and secretKey is generated when not set\n## Distributed MinIO ref: https://docs.minio.io/docs/distributed-minio-quickstart-guide\n##\nrootUser: \"\"\nrootPassword: \"\"\n\n## Use existing Secret that store following variables:\n##\n## | Chart var             | .data.\u003ckey\u003e in Secret    |\n## |:----------------------|:-------------------------|\n## | rootUser              | rootUser                 |\n## | rootPassword          | rootPassword             |\n##\n## All mentioned variables will be ignored in values file.\n## .data.rootUser and .data.rootPassword are mandatory,\n## others depend on enabled status of corresponding sections.\nexistingSecret: \"\"\n\n## Directory on the MinIO pof\ncertsPath: \"/etc/minio/certs/\"\nconfigPathmc: \"/etc/minio/mc/\"\n\n## Path where PV would be mounted on the MinIO Pod\nmountPath: \"/export\"\n## Override the root directory which the minio server should serve from.\n## If left empty, it defaults to the value of {{ .Values.mountPath }}\n## If defined, it must be a sub-directory of the path specified in {{ .Values.mountPath }}\n##\nbucketRoot: \"\"\n\n# Number of drives attached to a node\ndrivesPerNode: 1\n# Number of MinIO containers running\nreplicas: 16\n# Number of expanded MinIO clusters\npools: 1\n\n# Deploy if 'mode == gateway' - 4 replicas.\ngateway:\n  type: \"nas\" # currently only \"nas\" are supported.\n  replicas: 4\n\n## TLS Settings for MinIO\ntls:\n  enabled: false\n  ## Create a secret with private.key and public.crt files and pass that here. Ref: https://github.com/minio/minio/tree/master/docs/tls/kubernetes#2-create-kubernetes-secret\n  certSecret: \"\"\n  publicCrt: public.crt\n  privateKey: private.key\n\n## Trusted Certificates Settings for MinIO. Ref: https://docs.minio.io/docs/how-to-secure-access-to-minio-server-with-tls#install-certificates-from-third-party-cas\n## Bundle multiple trusted certificates into one secret and pass that here. Ref: https://github.com/minio/minio/tree/master/docs/tls/kubernetes#2-create-kubernetes-secret\n## When using self-signed certificates, remember to include MinIO's own certificate in the bundle with key public.crt.\n## If certSecret is left empty and tls is enabled, this chart installs the public certificate from .Values.tls.certSecret.\ntrustedCertsSecret: \"\"\n\n## Enable persistence using Persistent Volume Claims\n## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/\n##\npersistence:\n  enabled: true\n  annotations: {}\n\n  ## A manually managed Persistent Volume and Claim\n  ## Requires persistence.enabled: true\n  ## If defined, PVC must be created manually before volume will be bound\n  existingClaim: \"\"\n\n  ## minio data Persistent Volume Storage Class\n  ## If defined, storageClassName: \u003cstorageClass\u003e\n  ## If set to \"-\", storageClassName: \"\", which disables dynamic provisioning\n  ## If undefined (the default) or set to null, no storageClassName spec is\n  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on\n  ##   GKE, AWS \u0026 OpenStack)\n  ##\n  ## Storage class of PV to bind. By default it looks for standard storage class.\n  ## If the PV uses a different storage class, specify that here.\n  storageClass: \"\"\n  VolumeName: \"\"\n  accessMode: ReadWriteOnce\n  size: 500Gi\n\n  ## If subPath is set mount a sub folder of a volume instead of the root of the volume.\n  ## This is especially handy for volume plugins that don't natively support sub mounting (like glusterfs).\n  ##\n  subPath: \"\"\n\n## Expose the MinIO service to be accessed from outside the cluster (LoadBalancer service).\n## or access it from within the cluster (ClusterIP service). Set the service type and the port to serve it.\n## ref: http://kubernetes.io/docs/user-guide/services/\n##\nservice:\n  type: ClusterIP\n  clusterIP: ~\n  port: \"9000\"\n  nodePort: 32000\n\n## Configure Ingress based on the documentation here: https://kubernetes.io/docs/concepts/services-networking/ingress/\n##\n\ningress:\n  enabled: false\n  # ingressClassName: \"\"\n  labels: {}\n    # node-role.kubernetes.io/ingress: platform\n\n  annotations: {}\n    # kubernetes.io/ingress.class: nginx\n    # kubernetes.io/tls-acme: \"true\"\n    # kubernetes.io/ingress.allow-http: \"false\"\n    # kubernetes.io/ingress.global-static-ip-name: \"\"\n    # nginx.ingress.kubernetes.io/secure-backends: \"true\"\n    # nginx.ingress.kubernetes.io/backend-protocol: \"HTTPS\"\n    # nginx.ingress.kubernetes.io/whitelist-source-range: 0.0.0.0/0\n  path: /\n  hosts:\n    - minio-example.local\n  tls: []\n  #  - secretName: chart-example-tls\n  #    hosts:\n  #      - chart-example.local\n\nconsoleService:\n  type: ClusterIP\n  clusterIP: ~\n  port: \"9001\"\n  nodePort: 32001\n\nconsoleIngress:\n  enabled: false\n  # ingressClassName: \"\"\n  labels: {}\n    # node-role.kubernetes.io/ingress: platform\n\n  annotations: {}\n    # kubernetes.io/ingress.class: nginx\n    # kubernetes.io/tls-acme: \"true\"\n    # kubernetes.io/ingress.allow-http: \"false\"\n    # kubernetes.io/ingress.global-static-ip-name: \"\"\n    # nginx.ingress.kubernetes.io/secure-backends: \"true\"\n    # nginx.ingress.kubernetes.io/backend-protocol: \"HTTPS\"\n    # nginx.ingress.kubernetes.io/whitelist-source-range: 0.0.0.0/0\n  path: /\n  hosts:\n    - console.minio-example.local\n  tls: []\n  #  - secretName: chart-example-tls\n  #    hosts:\n  #      - chart-example.local\n\n## Node labels for pod assignment\n## Ref: https://kubernetes.io/docs/user-guide/node-selection/\n##\nnodeSelector: {}\ntolerations: []\naffinity: {}\ntopologySpreadConstraints: []\n\n## Add stateful containers to have security context, if enabled MinIO will run as this\n## user and group NOTE: securityContext is only enabled if persistence.enabled=true\nsecurityContext:\n  enabled: true\n  runAsUser: 1000\n  runAsGroup: 1000\n  fsGroup: 1000\n  fsGroupChangePolicy: \"OnRootMismatch\"\n\n# Additational pod annotations\npodAnnotations: {}\n\n# Additional pod labels\npodLabels: {}\n\n## Configure resource requests and limits\n## ref: http://kubernetes.io/docs/user-guide/compute-resources/\n##\nresources:\n  requests:\n    memory: 16Gi\n\n## List of policies to be created after minio install\n##\n## In addition to default policies [readonly|readwrite|writeonly|consoleAdmin|diagnostics]\n## you can define additional policies with custom supported actions and resources\npolicies: []\n## writeexamplepolicy policy grants creation or deletion of buckets with name\n## starting with example. In addition, grants objects write permissions on buckets starting with\n## example.\n# - name: writeexamplepolicy\n#   statements:\n#     - resources:\n#         - 'arn:aws:s3:::example*/*'\n#       actions:\n#         - \"s3:AbortMultipartUpload\"\n#         - \"s3:GetObject\"\n#         - \"s3:DeleteObject\"\n#         - \"s3:PutObject\"\n#         - \"s3:ListMultipartUploadParts\"\n#     - resources:\n#         - 'arn:aws:s3:::example*'\n#       actions:\n#         - \"s3:CreateBucket\"\n#         - \"s3:DeleteBucket\"\n#         - \"s3:GetBucketLocation\"\n#         - \"s3:ListBucket\"\n#         - \"s3:ListBucketMultipartUploads\"\n## readonlyexamplepolicy policy grants access to buckets with name starting with example.\n## In addition, grants objects read permissions on buckets starting with example.\n# - name: readonlyexamplepolicy\n#   statements:\n#     - resources:\n#         - 'arn:aws:s3:::example*/*'\n#       actions:\n#         - \"s3:GetObject\"\n#     - resources:\n#         - 'arn:aws:s3:::example*'\n#       actions:\n#         - \"s3:GetBucketLocation\"\n#         - \"s3:ListBucket\"\n#         - \"s3:ListBucketMultipartUploads\"\n## conditionsexample policy creates all access to example bucket with aws:username=\"johndoe\" and source ip range 10.0.0.0/8 and 192.168.0.0/24 only\n# - name: conditionsexample\n#   statements:\n#     - resources:\n#       - 'arn:aws:s3:::example/*'\n#       actions:\n#       - 's3:*'\n#       conditions:\n#         - StringEquals: '\"aws:username\": \"johndoe\"'\n#         - IpAddress: |\n#             \"aws:SourceIp\": [\n#               \"10.0.0.0/8\",\n#               \"192.168.0.0/24\"\n#             ]\n#\n## Additional Annotations for the Kubernetes Job makePolicyJob\nmakePolicyJob:\n  podAnnotations: {}\n  annotations: {}\n  securityContext:\n    enabled: false\n    runAsUser: 1000\n    runAsGroup: 1000\n    fsGroup: 1000\n  resources:\n    requests:\n      memory: 128Mi\n  nodeSelector: {}\n  tolerations: []\n  affinity: {}\n  extraVolumes: []\n  extraVolumeMounts: []\n  # Command to run after the main command on exit\n  exitCommand: \"\"\n\n## List of users to be created after minio install\n##\nusers:\n  ## Username, password and policy to be assigned to the user\n  ## Default policies are [readonly|readwrite|writeonly|consoleAdmin|diagnostics]\n  ## Add new policies as explained here https://docs.min.io/docs/minio-multi-user-quickstart-guide.html\n  ## NOTE: this will fail if LDAP is enabled in your MinIO deployment\n  ## make sure to disable this if you are using LDAP.\n  - accessKey: console\n    secretKey: console123\n    policy: consoleAdmin\n  # Or you can refer to specific secret\n  #- accessKey: externalSecret\n  #  existingSecret: my-secret\n  #  existingSecretKey: password\n  #  policy: readonly\n\n\n## Additional Annotations for the Kubernetes Job makeUserJob\nmakeUserJob:\n  podAnnotations: {}\n  annotations: {}\n  securityContext:\n    enabled: false\n    runAsUser: 1000\n    runAsGroup: 1000\n    fsGroup: 1000\n  resources:\n    requests:\n      memory: 128Mi\n  nodeSelector: {}\n  tolerations: []\n  affinity: {}\n  extraVolumes: []\n  extraVolumeMounts: []\n  # Command to run after the main command on exit\n  exitCommand: \"\"\n\n## List of buckets to be created after minio install\n##\nbuckets:\n  #   # Name of the bucket\n  # - name: bucket1\n  #   # Policy to be set on the\n  #   # bucket [none|download|upload|public]\n  #   policy: none\n  #   # Purge if bucket exists already\n  #   purge: false\n  #   # set versioning for\n  #   # bucket [true|false]\n  #   versioning: false\n  #   # set objectlocking for\n  #   # bucket [true|false] NOTE: versioning is enabled by default if you use locking \n  #   objectlocking: false\n  # - name: bucket2\n  #   policy: none\n  #   purge: false\n  #   versioning: true\n  #   # set objectlocking for\n  #   # bucket [true|false] NOTE: versioning is enabled by default if you use locking \n  #   objectlocking: false\n\n## Additional Annotations for the Kubernetes Job makeBucketJob\nmakeBucketJob:\n  podAnnotations: {}\n  annotations: {}\n  securityContext:\n    enabled: false\n    runAsUser: 1000\n    runAsGroup: 1000\n    fsGroup: 1000\n  resources:\n    requests:\n      memory: 128Mi\n  nodeSelector: {}\n  tolerations: []\n  affinity: {}\n  extraVolumes: []\n  extraVolumeMounts: []\n  # Command to run after the main command on exit\n  exitCommand: \"\"\n  \n## List of command to run after minio install\n## NOTE: the mc command TARGET is always \"myminio\"\ncustomCommands:\n  # - command: \"admin policy set myminio consoleAdmin group='cn=ops,cn=groups,dc=example,dc=com'\"\n\n## Additional Annotations for the Kubernetes Job customCommandJob\ncustomCommandJob:\n  podAnnotations: {}\n  annotations: {}\n  securityContext:\n    enabled: false\n    runAsUser: 1000\n    runAsGroup: 1000\n    fsGroup: 1000\n  resources:\n    requests:\n      memory: 128Mi\n  nodeSelector: {}\n  tolerations: []\n  affinity: {}\n  # Command to run after the main command on exit\n  exitCommand: \"\"\n  \n## Use this field to add environment variables relevant to MinIO server. These fields will be passed on to MinIO container(s)\n## when Chart is deployed\nenvironment:\n  ## Please refer for comprehensive list https://docs.min.io/minio/baremetal/reference/minio-server/minio-server.html\n  ## MINIO_SUBNET_LICENSE: \"License key obtained from https://subnet.min.io\"\n  ## MINIO_BROWSER: \"off\"\n\n## The name of a secret in the same kubernetes namespace which contain secret values\n## This can be useful for LDAP password, etc\n## The key in the secret must be 'config.env'\n##\n# extraSecret: minio-extraenv\n\n## OpenID Identity Management\n## The following section documents environment variables for enabling external identity management using an OpenID Connect (OIDC)-compatible provider.\n## See https://docs.min.io/minio/baremetal/security/openid-external-identity-management/external-authentication-with-openid-identity-provider.html#minio-external-identity-management-openid for a tutorial on using these variables.\noidc:\n  enabled: false\n  configUrl: \"https://identity-provider-url/.well-known/openid-configuration\"\n  clientId: \"minio\"\n  clientSecret: \"\"\n  claimName: \"policy\"\n  scopes: \"openid,profile,email\"\n  redirectUri: \"https://console-endpoint-url/oauth_callback\"\n  # Can leave empty\n  claimPrefix: \"\"\n  comment: \"\"\n\nnetworkPolicy:\n  enabled: false\n  allowExternal: true\n\n## PodDisruptionBudget settings\n## ref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/\n##\npodDisruptionBudget:\n  enabled: false\n  maxUnavailable: 1\n\n## Specify the service account to use for the MinIO pods. If 'create' is set to 'false'\n## and 'name' is left unspecified, the account 'default' will be used.\nserviceAccount:\n  create: true\n  ## The name of the service account to use. If 'create' is 'true', a service account with that name\n  ## will be created.\n  name: \"minio-sa\"\n\nmetrics:\n  serviceMonitor:\n    enabled: false\n    # scrape each node/pod individually for additional metrics\n    includeNode: false \n    public: true\n    additionalLabels: {}\n    # for node metrics\n    relabelConfigs: {}\n    # for cluster metrics\n    relabelConfigsCluster: {}\n      # metricRelabelings:\n      #   - regex: (server|pod)\n      #     action: labeldrop\n    # namespace: monitoring\n    # interval: 30s\n    # scrapeTimeout: 10s\n\n## ETCD settings: https://github.com/minio/minio/blob/master/docs/sts/etcd.md\n## Define endpoints to enable this section.\netcd:\n  endpoints: []\n  pathPrefix: \"\"\n  corednsPathPrefix: \"\"\n  clientCert: \"\"\n  clientCertKey: \"\""
            ],
            "verify": false,
            "version": "4.0.15",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    }
  ]
}
